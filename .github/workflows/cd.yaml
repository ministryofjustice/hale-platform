name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - 'demo'
      - 'dev'
      - 'main'

jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build NGINX image
        run: |
          docker build --tag hale-platform_nginx --file nginx.dockerfile .
      - name: Push NGINX image to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2
          local-image: hale-platform_nginx
          image: ${{ secrets.ECR_NAME }}:hale-platform_nginx-${{ github.sha }}
      - name: Run Composer
        run: |
          composer config http-basic.composer.wp.dsd.io ${{ secrets.COMPOSER_USER }} ${{ secrets.COMPOSER_PASS }}
          composer install --prefer-dist --no-progress
      - name: Run NPM
        run: |
          npm install --prefix ./wordpress/wp-content/themes/wp-hale
          npm run production --if-present --prefix ./wordpress/wp-content/themes/wp-hale
      - name: Build WordPress image
        run: |
          docker build --tag hale-platform_wordpress --file wp.dockerfile .
      - name: Push WordPress image to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2
          local-image: hale-platform_wordpress
          image: ${{ secrets.ECR_NAME }}:hale-platform_wordpress-${{ github.sha }}

  deployDemo:
    name: Deploy to Demonstration 
    if: github.event.ref == 'refs/heads/demo'
    needs: build
    runs-on: ubuntu-latest
    environment: demonstration
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_DEMO }}
        run: |
          echo "${{ secrets.KUBE_CERT_DEMO }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_DEMO }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_DEMO }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply Helm charts
        run: | 
          helm upgrade wordpress helm_deploy/wordpress \
          --install \
          --namespace ${{ secrets.KUBE_NAMESPACE_DEMO }} \
          --values helm_deploy/wordpress/values.yaml \
          --set secrets.wpdbuser=${{ secrets.WORDPRESS_DB_USER }} \
          --set secrets.wpdbhost=${{ secrets.WORDPRESS_DB_HOST }} \
          --set secrets.wpdbname=${{ secrets.WORDPRESS_DB_NAME }} \
          --set secrets.wpdbpassword=${{ secrets.WORDPRESS_DB_PASSWORD }} \
          --set secrets.wpadminemail=${{ secrets.WORDPRESS_ADMIN_EMAIL }} \
          --set secrets.wpadminuser=${{ secrets.WORDPRESS_ADMIN_USER }} \
          --set secrets.wpadminpassword=${{ secrets.WORDPRESS_ADMIN_PASSWORD }} \
          --set configmap.servername=${{ secrets.KUBE_NAMESPACE_DEMO }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set configmap.wpenvtype=${{ secrets.WP_ENV_TYPE }} \
          --set ingress.metadata.annotations.setidentifier=hale-platform-ingress-${{ secrets.KUBE_NAMESPACE_DEMO }}-green \
          --set domain=${{ secrets.KUBE_NAMESPACE_DEMO }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set nginx.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_nginx-${{ github.sha }} \
          --set wp.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_wordpress-${{ github.sha }}

  ecrCleanDemo:
    name: ECR clean - Demo
    runs-on: ubuntu-latest
    needs: [build, deployDemo]
    steps:
    - name: Run ECR clean-up script
      uses: ministryofjustice/ecr-images-cleaner-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        kube-cert: ${{ secrets.KUBE_CERT_DEMO }}
        kube-token: ${{ secrets.KUBE_TOKEN_DEMO }}
        kube-cluster: ${{ secrets.KUBE_CLUSTER_DEMO }}
        kube-namespace: ${{ secrets.KUBE_NAMESPACE_DEMO }}
        ecr-repo-name: ${{ secrets.ECR_NAME }}
        days-to-keep-old-images: 10 
        max-old-images-to-keep: 24

  deployDev:
    name: Deploy to Development
    if: github.event.ref == 'refs/heads/dev'
    needs: build
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_DEV }}
        run: |
          echo "${{ secrets.KUBE_CERT_DEV }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_DEV }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_DEV }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply Helm charts
        run: | 
          helm upgrade wordpress helm_deploy/wordpress \
          --install \
          --namespace ${{ secrets.KUBE_NAMESPACE_DEV }} \
          --values helm_deploy/wordpress/values.yaml \
          --set secrets.wpdbuser=${{ secrets.WORDPRESS_DB_USER }} \
          --set secrets.wpdbhost=${{ secrets.WORDPRESS_DB_HOST }} \
          --set secrets.wpdbname=${{ secrets.WORDPRESS_DB_NAME }} \
          --set secrets.wpdbpassword=${{ secrets.WORDPRESS_DB_PASSWORD }} \
          --set secrets.wpadminemail=${{ secrets.WORDPRESS_ADMIN_EMAIL }} \
          --set secrets.wpadminuser=${{ secrets.WORDPRESS_ADMIN_USER }} \
          --set secrets.wpadminpassword=${{ secrets.WORDPRESS_ADMIN_PASSWORD }} \
          --set secrets.wpauthkey="${{ secrets.WORDPRESS_AUTH_KEY_FILE }}" \
          --set secrets.wpauthsalt="${{ secrets.WORDPRESS_AUTH_SALT_FILE }}" \
          --set secrets.wploggedinkey="${{ secrets.WORDPRESS_LOGGED_IN_KEY_FILE }}" \
          --set secrets.wploggedinsalt="${{ secrets.WORDPRESS_LOGGED_IN_SALT_FILE }}" \
          --set secrets.wpnoncekey="${{ secrets.WORDPRESS_NONCE_KEY_FILE }}" \
          --set secrets.wpnoncesalt="${{ secrets.WORDPRESS_NONCE_SALT_FILE }}" \
          --set secrets.wpsecureauthkey="${{ secrets.WORDPRESS_SECURE_AUTH_KEY_FILE }}" \
          --set secrets.wpsecureauthsalt="${{ secrets.WORDPRESS_SECURE_AUTH_SALT_FILE }}" \
          --set configmap.servername=${{ secrets.KUBE_NAMESPACE_DEV }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set configmap.wpenvtype=${{ secrets.WP_ENV_TYPE }} \
          --set ingress.metadata.annotations.setidentifier=hale-platform-ingress-${{ secrets.KUBE_NAMESPACE_DEV }}-green \
          --set domain=${{ secrets.KUBE_NAMESPACE_DEV }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set nginx.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_nginx-${{ github.sha }} \
          --set wp.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_wordpress-${{ github.sha }}
  
  ecrCleanDev:
    name: ECR clean - Dev
    runs-on: ubuntu-latest
    needs: [build, deployDev]
    steps:
    - name: Run ECR clean-up script
      uses: ministryofjustice/ecr-images-cleaner-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        kube-cert: ${{ secrets.KUBE_CERT_DEV }}
        kube-token: ${{ secrets.KUBE_TOKEN_DEV }}
        kube-cluster: ${{ secrets.KUBE_CLUSTER_DEV }}
        kube-namespace: ${{ secrets.KUBE_NAMESPACE_DEV }}
        ecr-repo-name: ${{ secrets.ECR_NAME }}
        days-to-keep-old-images: 10 
        max-old-images-to-keep: 24

  deployStaging:
    name: Deploy to Staging
    if: github.event.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_STAGING }}
        run: |
          echo "${{ secrets.KUBE_CERT_STAGING }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_STAGING }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_STAGING }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply Helm charts
        run: | 
          helm upgrade wordpress helm_deploy/wordpress \
          --install \
          --namespace ${{ secrets.KUBE_NAMESPACE_STAGING }} \
          --values helm_deploy/wordpress/values.yaml \
          --set secrets.wpdbuser=${{ secrets.WORDPRESS_DB_USER }} \
          --set secrets.wpdbhost=${{ secrets.WORDPRESS_DB_HOST }} \
          --set secrets.wpdbname=${{ secrets.WORDPRESS_DB_NAME }} \
          --set secrets.wpdbpassword=${{ secrets.WORDPRESS_DB_PASSWORD }} \
          --set secrets.wpadminemail=${{ secrets.WORDPRESS_ADMIN_EMAIL }} \
          --set secrets.wpadminuser=${{ secrets.WORDPRESS_ADMIN_USER }} \
          --set secrets.wpadminpassword=${{ secrets.WORDPRESS_ADMIN_PASSWORD }} \
          --set configmap.wpenvtype=${{ secrets.WP_ENV_TYPE }} \
          --set configmap.servername=${{ secrets.KUBE_NAMESPACE_STAGING }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set ingress.metadata.annotations.setidentifier=hale-platform-ingress-${{ secrets.KUBE_NAMESPACE_STAGING }}-green \
          --set domain=${{ secrets.KUBE_NAMESPACE_STAGING }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set nginx.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_nginx-${{ github.sha }} \
          --set wp.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_wordpress-${{ github.sha }}

  ecrCleanStaging:
    name: ECR clean - Staging
    runs-on: ubuntu-latest
    needs: [build, deployStaging]
    steps:
    - name: Run ECR clean-up script
      uses: ministryofjustice/ecr-images-cleaner-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        kube-cert: ${{ secrets.KUBE_CERT_STAGING }}
        kube-token: ${{ secrets.KUBE_TOKEN_STAGING }}
        kube-cluster: ${{ secrets.KUBE_CLUSTER_STAGING }}
        kube-namespace: ${{ secrets.KUBE_NAMESPACE_STAGING }}
        ecr-repo-name: ${{ secrets.ECR_NAME }}
        days-to-keep-old-images: 10 
        max-old-images-to-keep: 24

  deployProd:
    name: Deploy to Production
    needs: deployStaging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER_PROD }}
        run: |
          echo "${{ secrets.KUBE_CERT_PROD }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_PROD }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_PROD }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply Helm charts
        run: | 
          helm upgrade wordpress helm_deploy/wordpress \
          --install \
          --namespace ${{ secrets.KUBE_NAMESPACE_PROD }} \
          --values helm_deploy/wordpress/values.yaml \
          --set secrets.wpdbuser=${{ secrets.WORDPRESS_DB_USER }} \
          --set secrets.wpdbhost=${{ secrets.WORDPRESS_DB_HOST }} \
          --set secrets.wpdbname=${{ secrets.WORDPRESS_DB_NAME }} \
          --set secrets.wpdbpassword=${{ secrets.WORDPRESS_DB_PASSWORD }} \
          --set secrets.wpadminemail=${{ secrets.WORDPRESS_ADMIN_EMAIL }} \
          --set secrets.wpadminuser=${{ secrets.WORDPRESS_ADMIN_USER }} \
          --set secrets.wpadminpassword=${{ secrets.WORDPRESS_ADMIN_PASSWORD }} \
          --set secrets.wpauthkey=${{ secrets.WORDPRESS_AUTH_KEY_FILE }} \
          --set secrets.wpauthsalt=${{ secrets.WORDPRESS_AUTH_SALT_FILE }} \
          --set secrets.wploggedinkey=${{ secrets.WORDPRESS_LOGGED_IN_KEY_FILE }} \
          --set secrets.wploggedinsalt=${{ secrets.WORDPRESS_LOGGED_IN_SALT_FILE }} \
          --set secrets.wpnoncekey=${{ secrets.WORDPRESS_NONCE_KEY_FILE }} \
          --set secrets.wpnoncesalt=${{ secrets.WORDPRESS_NONCE_SALT_FILE }} \
          --set secrets.wpsecureauthkey=${{ secrets.WORDPRESS_SECURE_AUTH_KEY_FILE }} \
          --set secrets.wpsecureauthsalt=${{ secrets.WORDPRESS_SECURE_AUTH_SALT_FILE }} \
          --set configmap.wpenvtype=${{ secrets.WP_ENV_TYPE }} \
          --set configmap.servername=${{ secrets.KUBE_NAMESPACE_PROD }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set ingress.metadata.annotations.setidentifier=hale-platform-ingress-${{ secrets.KUBE_NAMESPACE_PROD }}-green \
          --set domain=${{ secrets.KUBE_NAMESPACE_PROD }}.apps.live.cloud-platform.service.justice.gov.uk \
          --set nginx.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_nginx-${{ github.sha }} \
          --set wp.image.repository=754256621582.dkr.ecr.eu-west-2.amazonaws.com/${{ secrets.ECR_NAME }}:hale-platform_wordpress-${{ github.sha }}
  
  ecrCleanProd:
    name: ECR clean - Prod
    runs-on: ubuntu-latest
    needs: [build, deployProd]
    steps:
    - name: Run ECR clean-up script
      uses: ministryofjustice/ecr-images-cleaner-action@v1.0.1
      with:
        aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
        kube-cert: ${{ secrets.KUBE_CERT_PROD }}
        kube-token: ${{ secrets.KUBE_TOKEN_PROD }}
        kube-cluster: ${{ secrets.KUBE_CLUSTER_PROD }}
        kube-namespace: ${{ secrets.KUBE_NAMESPACE_PROD }}
        ecr-repo-name: ${{ secrets.ECR_NAME }}
        days-to-keep-old-images: 10 
        max-old-images-to-keep: 24

