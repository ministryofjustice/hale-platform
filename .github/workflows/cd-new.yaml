name: New Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - 'dev'


jobs:

  setenv:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      deployenv: ${{ steps.outputEnv.outputs.deployenv }}
    steps:
      - id: stepDev
        if: github.event.ref == 'refs/heads/dev'
        run: echo "DEPLOYENV=Development" >> $GITHUB_ENV
      - id: outputEnv
        run: |
          echo Deploying to $DEPLOYENV
          echo "deployenv=$DEPLOYENV" >> "$GITHUB_OUTPUT"

  testjob:
    name: Test Job
    runs-on: ubuntu-latest
    needs: setenv
    environment: ${{needs.setenv.outputs.deployenv}}
    steps:
      - name: Output Vars 
        run: |
          echo "${{ vars.EXAMPLEVAR1 }}" 
     
  buildImage:
      name: Build Image and push to ECR
      runs-on: ubuntu-latest
      needs: setenv
      environment: ${{needs.setenv.outputs.deployenv}}
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        # Assume role in Cloud Platform
        - uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
            aws-region: ${{ vars.ECR_REGION }}
        # Login to container repository
        - uses: aws-actions/amazon-ecr-login@v1
          id: login-ecr 
        - name: Build NGINX image and Push image to ECR
        - run: |
            docker build --pull --no-cache --tag $REGISTRY/$REPOSITORY:hale-platform_nginx-$IMAGE_TAG --file nginx.dockerfile .
            docker push $REGISTRY/$REPOSITORY:hale-platform_nginx-$IMAGE_TAG 
          env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: ${{ vars.ECR_REPOSITORY }}
            IMAGE_TAG: ${{ github.sha }}